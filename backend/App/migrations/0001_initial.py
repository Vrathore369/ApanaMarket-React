# Generated by Django 5.0 on 2023-12-11 09:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('massage', models.TextField()),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='Code', max_length=50, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('discount', models.PositiveIntegerField(default=0)),
                ('amount', models.PositiveIntegerField(default=500)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('selling_price', models.PositiveIntegerField()),
                ('discounted_price', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('rating', models.FloatField()),
                ('review', models.PositiveIntegerField()),
                ('brand', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('M', 'Mobiles'), ('L', 'Laptops'), ('MF', 'MensFashion'), ('WF', 'WomensFashion'), ('G', 'Grocery'), ('H', 'HomeAppliances'), ('E', 'Electronics'), ('T', 'Toys'), ('Md', 'Medicine')], max_length=2)),
                ('type', models.CharField(choices=[('Unknown', 'Unknown'), ('T-Shirts', 'T-Shirts'), ('Shirts', 'Shirts'), ('Winter_Wears', 'Winter_Wears'), ('Blazers', 'Blazers'), ('Suits', 'Suits'), ('Jeans', 'Jeans'), ('Trousers', 'Trousers'), ('Trackpants', 'Trackpants'), ('Shoes', 'Shoes'), ('Slippers', 'Slippers'), ('Wallets', 'Wallets'), ('Watches', 'Watches'), ('Sunglasses', 'Sunglasses'), ('Belts', 'Belts'), ('Jewellery', 'Jewellery'), ('Sarees', 'Sarees'), ('Tops', 'Tops'), ('Kurtas', 'Kurtas'), ('Purse', 'Purse'), ('Snacks_&_Beverages', 'Snacks_&_Beverages'), ('Packaged_Food', 'Packaged_Food'), ('Personal_&_Baby_Care', 'Personal_&_Baby_Care'), ('Household_Care', 'Household_Care'), ('Dairy_Products', 'Dairy_Products'), ('Home_&_Kitchen', 'Home_&_Kitchen'), ('Foodgrains', 'Foodgrains'), ('Home_Decor', 'Home_Decor'), ('Furniture', 'Furniture'), ('Lightings', 'Lightings'), ('Tools', 'Tools'), ('Audio', 'Audio'), ('Gaming', 'Gaming'), ('Laptop_Accessories', 'Laptop_Accessories'), ('Camera_Accessories', 'Camera_Accessories'), ('Television', 'Television'), ('Air_Conditioner', 'Air_Conditioner'), ('Refrigerator', 'Refrigerator'), ('Washing_Machine', 'Washing_Machine'), ('Others', 'Others'), ('Soft_Toys', 'Soft_Toys'), ('Remote_Control_Toys', 'Remote_Control_Toys'), ('Puzzles', 'Puzzles'), ('Board_Games', 'Board_Games'), ('Learning_Toys', 'Learning_Toys'), ('Baby_Toys', 'Baby_Toys')], default='Unknown', max_length=113)),
                ('product_image', models.ImageField(upload_to='')),
                ('offer_1', models.CharField(default='Bank Offer 5% Unlimited Cashback on Axis Bank Credit', max_length=255)),
                ('offer_2', models.CharField(default='Special Price Get extra ₹3000 off (price inclusive of discount)', max_length=255)),
                ('offer_3', models.CharField(default='No cost EMI ₹1,999/month. Standard EMI also available', max_length=255)),
                ('offer_4', models.CharField(default='Partner Offer ₹2000 ApnaMarket Gift Card on Every 1000th Transaction with a new Visa Debit/Credit Card', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('phone', models.CharField(max_length=13, null=True)),
                ('locality', models.CharField(max_length=200)),
                ('gender', models.CharField(choices=[('unknown', 'unknown'), ('Male', 'Male'), ('Female', 'Female'), ('Not Specified', 'Not Specified')], default='unknown', max_length=15)),
                ('city', models.CharField(max_length=50)),
                ('zipcode', models.IntegerField()),
                ('state', models.CharField(choices=[('unknown', 'unknown'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Chandigarh', 'Chandigarh'), ('Dadra and Nagar Haveli', 'Dadra and Nagar Haveli'), ('Daman and Diu', 'Daman and Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu and Kashmir', 'Jammu and Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Ladakh', 'Ladakh'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Punjab', 'Punjab'), ('Pondicherry', 'Pondicherry'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal')], default='unknown', max_length=50)),
                ('landmark', models.CharField(max_length=50, null=True)),
                ('age', models.PositiveIntegerField(default=0)),
                ('address', models.CharField(choices=[('unknown', 'unknown'), ('Home', 'Home'), ('Work', 'Work')], default='unknown', max_length=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderPlaced',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping', models.PositiveIntegerField(default=99)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ordered_date', models.DateTimeField(auto_now_add=True)),
                ('order_id', models.CharField(editable=False, max_length=20)),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Packed', 'Packed'), ('On The Way', 'On The Way'), ('Delivered', 'Delivered'), ('Cancel', 'Cancel')], default='Pending', max_length=50)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.customer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.product')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='App.coupon')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.product')),
            ],
        ),
    ]
